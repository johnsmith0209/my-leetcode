#! /usr/local/bin/node
'use strict';

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
 function ListNode(val) {
  this.val = val;
  this.next = null;
}
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    let sumOverTen = false;
    const result = [];
    while (l1 || l2 || sumOverTen) {
        let sum = (l1?.val ?? 0) + (l2?.val ?? 0) + sumOverTen;
        sumOverTen = sum >= 10 ? 1 : 0;
        if (sumOverTen) {
            sum -= 10;
        }
        const currNode = new ListNode(sum);
        result[result.length - 1] && (result[result.length - 1].next = currNode);
        result.push(currNode);
        l1 = l1?.next;
        l2 = l2?.next;
    }
    return result[0];
};